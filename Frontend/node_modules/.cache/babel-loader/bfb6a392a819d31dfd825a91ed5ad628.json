{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nvar rfs = require('fs');\n\nvar path = require('path');\n\nmodule.exports = function walk(dir, opts, emitter, dstat) {\n  if (!opts) opts = {};\n  var fdir = opts._original || dir;\n  opts._original = undefined;\n  var fs = opts.fs || rfs;\n\n  if (!emitter) {\n    emitter = new EventEmitter();\n\n    emitter.stop = function () {\n      emitter._stopped = true;\n      emitter.emit('stop');\n    };\n\n    emitter._pending = 0;\n    emitter._seen = {};\n  }\n\n  if (dstat) {\n    var stopped = false;\n    emitter.emit('directory', fdir, dstat, function stop() {\n      stopped = true;\n    });\n    emitter.emit('path', fdir, dstat);\n\n    if (!stopped) {\n      emitter._pending++;\n      fs.readdir(dir, function (err, files) {\n        emitter._pending--;\n        onreaddir(dir, err, files);\n      });\n    } else check();\n  } else {\n    emitter._pending++;\n    fs.lstat(dir, function (err, stat) {\n      emitter._pending--;\n      onlstat(err, stat);\n    });\n  }\n\n  function onlstat(err, stat) {\n    if (emitter._stopped) return;\n\n    if (err) {\n      if (!err.path) err.path = dir;\n      emitter.emit('error', err);\n      return check();\n    }\n\n    emitter._seen[stat.ino || dir] = true;\n\n    if (stat.isSymbolicLink() && opts.followSymlinks) {\n      emitter.emit('link', fdir, stat);\n      emitter._pending++;\n      fs.readlink(dir, function (err, rfile) {\n        if (emitter._stopped) return;\n        emitter._pending--;\n\n        if (err) {\n          if (!err.path) err.path = dir;\n          emitter.emit('error', err);\n          return check();\n        }\n\n        var file_ = path.resolve(dir, rfile);\n        emitter.emit('readlink', fdir, file_);\n        emitter._pending++;\n        fs.lstat(file_, function (err, stat) {\n          emitter._pending--;\n          onstat(err, stat);\n        });\n      });\n    } else if (stat.isSymbolicLink()) {\n      emitter.emit('link', fdir, stat);\n      emitter.emit('path', fdir, stat);\n      check();\n    } else if (stat.isDirectory()) {\n      var stopped = false;\n      emitter.emit('directory', fdir, stat, function stop() {\n        stopped = true;\n      });\n      emitter.emit('path', fdir, stat);\n\n      if (!stopped) {\n        emitter._pending++;\n        fs.readdir(dir, function (err, files) {\n          emitter._pending--;\n          onreaddir(dir, err, files);\n        });\n      } else check();\n    } else {\n      emitter.emit('file', fdir, stat);\n      emitter.emit('path', fdir, stat);\n      check();\n    }\n  }\n\n  return emitter;\n\n  function check() {\n    if (emitter._pending === 0) finish();\n  }\n\n  function finish() {\n    emitter.emit('end');\n    emitter._stopped = true;\n  }\n\n  function onreaddir(dir, err, files) {\n    if (emitter._stopped) return;\n\n    if (err) {\n      if (!err.path) err.path = dir;\n      emitter.emit('error', err);\n      return check();\n    }\n\n    files.forEach(function (rfile) {\n      var file = path.join(fdir, rfile);\n      emitter._pending++;\n      fs.lstat(file, function (err, stat) {\n        emitter._pending--;\n        if (emitter._stopped) return;\n\n        if (err) {\n          if (!err.path) err.path = file;\n          emitter.emit('error', err);\n          check();\n        } else onstat(file, stat);\n      });\n    });\n    check();\n  }\n\n  function onstat(file, stat, original) {\n    if (emitter._seen[stat.ino || file]) return check();\n    emitter._seen[stat.ino || file] = true;\n\n    if (stat.isDirectory()) {\n      if (original) opts._original = original;\n      walk(file, opts, emitter, stat);\n      check();\n    } else if (stat.isSymbolicLink() && opts.followSymlinks) {\n      emitter.emit('link', file, stat);\n      fs.readlink(file, function (err, rfile) {\n        if (emitter._stopped) return;\n\n        if (err) {\n          if (!err.path) err.path = file;\n          emitter.emit('error', err);\n          return check();\n        }\n\n        var file_ = path.resolve(path.dirname(file), rfile);\n        emitter.emit('readlink', file, file_);\n        emitter._pending++;\n        fs.lstat(file_, function (err, stat_) {\n          emitter._pending--;\n          if (emitter._stopped) return;\n\n          if (err) {\n            if (!err.path) err.path = file_;\n            emitter.emit('error', err);\n            return check();\n          }\n\n          onstat(file_, stat_, file);\n          check();\n        });\n      });\n    } else if (stat.isSymbolicLink()) {\n      emitter.emit('link', file, stat);\n      emitter.emit('path', file, stat);\n      check();\n    } else {\n      emitter.emit('file', file, stat);\n      emitter.emit('path', file, stat);\n      check();\n    }\n  }\n};","map":{"version":3,"sources":["/home/maa28/Desktop/Web/ma28.onthewifi.com/node_modules/findit/index.js"],"names":["EventEmitter","require","rfs","path","module","exports","walk","dir","opts","emitter","dstat","fdir","_original","undefined","fs","stop","_stopped","emit","_pending","_seen","stopped","readdir","err","files","onreaddir","check","lstat","stat","onlstat","ino","isSymbolicLink","followSymlinks","readlink","rfile","file_","resolve","onstat","isDirectory","finish","forEach","file","join","original","dirname","stat_"],"mappings":"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","sourcesContent":["var EventEmitter = require('events').EventEmitter;\nvar rfs = require('fs');\nvar path = require('path');\n\nmodule.exports = function walk (dir, opts, emitter, dstat) {\n    if (!opts) opts = {};\n    var fdir = opts._original || dir;\n    opts._original = undefined;\n    var fs = opts.fs || rfs;\n    \n    if (!emitter) {\n        emitter = new EventEmitter;\n        emitter.stop = function () {\n            emitter._stopped = true;\n            emitter.emit('stop');\n        };\n        emitter._pending = 0;\n        emitter._seen = {};\n    }\n    \n    if (dstat) {\n        var stopped = false;\n        emitter.emit('directory', fdir, dstat, function stop () {\n            stopped = true;\n        });\n        emitter.emit('path', fdir, dstat);\n        if (!stopped) {\n            emitter._pending ++;\n            fs.readdir(dir, function (err, files) {\n                emitter._pending --;\n                onreaddir(dir, err, files);\n            });\n        }\n        else check()\n    }\n    else {\n        emitter._pending ++;\n        fs.lstat(dir, function (err, stat) {\n            emitter._pending --;\n            onlstat(err, stat);\n        });\n    }\n    function onlstat (err, stat) {\n        if (emitter._stopped) return;\n        \n        if (err) {\n            if (!err.path) err.path = dir;\n            emitter.emit('error', err);\n            return check();\n        }\n        emitter._seen[stat.ino || dir] = true;\n        \n        if (stat.isSymbolicLink() && opts.followSymlinks) {\n            emitter.emit('link', fdir, stat);\n            emitter._pending ++;\n            fs.readlink(dir, function (err, rfile) {\n                if (emitter._stopped) return;\n                emitter._pending --;\n                if (err) {\n                    if (!err.path) err.path = dir;\n                    emitter.emit('error', err);\n                    return check();\n                }\n                var file_ = path.resolve(dir, rfile);\n                emitter.emit('readlink', fdir, file_);\n                emitter._pending ++;\n                fs.lstat(file_, function (err, stat) {\n                    emitter._pending --;\n                    onstat(err, stat);\n                });\n            });\n        }\n        else if (stat.isSymbolicLink()) {\n            emitter.emit('link', fdir, stat);\n            emitter.emit('path', fdir, stat);\n            check();\n        }\n        else if (stat.isDirectory()) {\n            var stopped = false;\n            emitter.emit('directory', fdir, stat, function stop () {\n                stopped = true;\n            });\n            emitter.emit('path', fdir, stat);\n            if (!stopped) {\n                emitter._pending ++;\n                fs.readdir(dir, function (err, files) {\n                    emitter._pending --;\n                    onreaddir(dir, err, files);\n                });\n            }\n            else check()\n        }\n        else {\n            emitter.emit('file', fdir, stat);\n            emitter.emit('path', fdir, stat);\n            check();\n        }\n    }\n    \n    return emitter;\n    \n    function check () {\n        if (emitter._pending === 0) finish();\n    }\n    \n    function finish () {\n        emitter.emit('end');\n        emitter._stopped = true;\n    }\n    \n    function onreaddir (dir, err, files) {\n        if (emitter._stopped) return;\n        \n        if (err) {\n            if (!err.path) err.path = dir;\n            emitter.emit('error', err);\n            return check();\n        }\n        \n        files.forEach(function (rfile) {\n            var file = path.join(fdir, rfile);\n            \n            emitter._pending ++;\n            fs.lstat(file, function (err, stat) {\n                emitter._pending --;\n                \n                if (emitter._stopped) return;\n                if (err) {\n                    if (!err.path) err.path = file;\n                    emitter.emit('error', err);\n                    check()\n                }\n                else onstat(file, stat)\n            });\n        });\n       check();\n    }\n    \n    function onstat (file, stat, original) {\n        if (emitter._seen[stat.ino || file]) return check();\n        emitter._seen[stat.ino || file] = true;\n        \n        if (stat.isDirectory()) {\n            if (original) opts._original = original;\n            walk(file, opts, emitter, stat);\n            check();\n        }\n        else if (stat.isSymbolicLink() && opts.followSymlinks) {\n            emitter.emit('link', file, stat);\n            \n            fs.readlink(file, function (err, rfile) {\n                if (emitter._stopped) return;\n                if (err) {\n                    if (!err.path) err.path = file;\n                    emitter.emit('error', err);\n                    return check();\n                }\n                var file_ = path.resolve(path.dirname(file), rfile);\n                \n                emitter.emit('readlink', file, file_);\n                emitter._pending ++;\n                fs.lstat(file_, function (err, stat_) {\n                    emitter._pending --;\n                    if (emitter._stopped) return;\n                    if (err) {\n                        if (!err.path) err.path = file_;\n                        emitter.emit('error', err);\n                        return check();\n                    }\n                    \n                    onstat(file_, stat_, file);\n                    check();\n                });\n            });\n        }\n        else if (stat.isSymbolicLink()) {\n            emitter.emit('link', file, stat);\n            emitter.emit('path', file, stat);\n            check();\n        }\n        else {\n            emitter.emit('file', file, stat);\n            emitter.emit('path', file, stat);\n            check();\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}